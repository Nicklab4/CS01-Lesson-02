//6. *Написать программу подсчета количества «хороших» чисел в
//диапазоне от 1 до 1 000 000 000. «Хорошим» называется число,
//которое делится на сумму своих цифр.
//   Реализовать подсчёт времени выполнения программы, используя
//структуру DateTime.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace CS01_Lesson_02_HW06_ConsApp
{
    class Program
    {
        static void Main(string[] args)
        {
            long temp = 0,
                sumNum = 0; // Сумма цифр из которого состоит число
            long x = 9,     // Параметр для вычисления суммы элементов во втором варианте
                count = 0;  // Cчётчик цикла во втором варианте решения
            int countDecimal = 0; // Счётчик десятичных во втором варианте решения
            DateTime start;
            TimeSpan ts1;

            ////////////////////////////////////////////////////////////////////
            // Первый вариант
            ////////////////////////////////////////////////////////////////////
            start = DateTime.Now;

            // Предусматривающий вычисление простых чисел обычным перебором.
            // Каждое число делится на 10 до тех пор пока оно не закончится
            // и складываются остатки от деления.
            //
            // 1000000000
            for (long i = 1; i <= 1000000000; i++)
            {
                temp = i;
                while (temp > 0)
                {
                    sumNum += temp % 10;
                    temp = temp / 10;
                }

                if (i % sumNum == 0)
                    Console.WriteLine("{0} - хорошее число, делится на {1}", i, sumNum);

                count = 0;
            }

            ts1 = start - DateTime.Now;

            ////////////////////////////////////////////////////////////////////
            // Второй вариант
            ////////////////////////////////////////////////////////////////////
            start = DateTime.Now;

            // Сперва выполняется отдельный цикл из 10 первых элементов,
            // позволяющий избежать деления на ноль.
            for (int i = 1; i <= 10; i++)
            {
                count++;
                Console.WriteLine("{0} - хорошее число, делится на {1}", count, count);
            }

            // Далее выполняется основной цикл из оставшихся элементов
            //1_000_000_000
            while (count <= 1000000000)
            {
                // x - является числом 9 умноженным на некоторый параметр
                // увеличивающийся каждые 10 чисел на 9(9*1), каждые 100 чисел на 18(9*2),
                // каждые 1000 чисел на 27(9*3) и т.д.

                // Первый цикл по 10 элементов в котором вычисляется сумма чисел составляющих
                // число цифр путём вычитания из основного числа параметра x
                for (int i = 0; i < 10; i++)
                {
                    sumNum = count - x;

                    if (count % sumNum == 0)
                        Console.WriteLine("{0} - хорошее число, делится на {1}", count, sumNum);

                    count++;
                }

                // Вычисление countDecimal - параметра который определяет насколько
                // нужно увелечить x на очередном шаге, если 10 то 9*1, 100 то 9*2,
                // 1000 то 9*3 и т.д. Учитываются только первые нули числа.
                // Так например, если у нас число 10100 то приращение будет
                // осуществлено только на 2 элемента.
                temp = count;
                countDecimal = 0;
                while (temp > 0)
                {
                    if (temp % 10 == 0)
                    {
                        temp = temp / 10;
                        countDecimal++;
                        if (temp % 10 != 0)
                            break;
                    }
                }

                // Вычисление числа x которое будет использоваться на следующем шаге
                // цикла из 10 элементов
                x += 9 * countDecimal;
            }

            Console.WriteLine("Второй вариант выполнен за {0}", start - DateTime.Now);
            Console.WriteLine("Первый вариант был выполнен за {0}", ts1);
            Console.ReadLine();
        }
    }
}
